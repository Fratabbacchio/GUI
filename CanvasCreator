import java.awt.Canvas;
import java.awt.Color;
import java.awt.Graphics;
import java.util.ArrayList;
import javax.swing.JFrame;



public class CanvasCreator extends Canvas {
	private Imperatore radice;
	private int[] cursore;
	private double WGerarchia; //dimensioni della gerarchia corrente variabili
	private double HGerarchia;
	private final int WIDTH; //dimensioni fissate del canvas 
	private final int LENGTH;

	public CanvasCreator(Imperatore rad) {
		rad= radice;
		cursore= new int[0,0];
		this.WIDTH= 100;
		this.LENGTH= 100;
		setBackground(Color.black);
		setSize(WIDTH, LENGTH);
		
	//costruttore con dati di grandezza ecc da aggiungere al frame
	}
	public void paint(Graphics g) { //CanvasCreator canvas, Persona albero, double h , double w, boolean ott, double[] cur
		
	}
	

	public boolean DoppiaRiga(Imperatore person, int max) {
		return ottimizzazione;
	/*conta i figli dell'imperatore e le loro mogli, se superano un numero settato
	in base alla larghezza del suo spazio dedicato da a quella gerarchia una doppia riga
	*/
	
	}

	public void scriviNome(double[] coordinate, String nome, boolean imperatore, Graphics g, String qualcosaltro) {
	/* scriverà il nome del tipo nella posizione del cursore o coordinate generiche, verificherà
	-se deve andare a capo se il nome è troppo lungo;
	-se mettere in grassetto il nome se è imperatore(aggiungendo eventuali dati);
	*/
	}
				
	public void adozione(int x1, int y1, int x2, int y2,Graphics g)
	{
		  g.setColor(Color.black);
		  g.drawLine(x1,y1,x2,y2);
		  g.setColor(Color.white);
		  final int ognquant=5;
		  if (x1!=x2) 
		  {
			  for (int i=x1;i<x2;i+=ognquant) 
			  {
				  g.drawLine(i, y1, i+ognquant, y2);
			  }	  
		  }
		  else 
		  {
			  for (int i=y1;i<y2;i+=2*ognquant) 
			  {
				  g.drawLine(x1, i, x2, i+ognquant);
			  }
		  }
	}
	public static void main(String[] args) {
	}
	
	
}
